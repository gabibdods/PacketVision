services:
  listener:
    environment:
      L_PORT: ${L_PORT}
      DB_PORT: ${DB_PORT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASS: ${MYSQL_PASSWORD}
    build:
      context: ./PacketVisionListener
      dockerfile: Dockerfile
    container_name: pvL
    ports:
      - "${L_PORT}:${L_TROP}/udp"
    depends_on:
      - db
    restart: always

  db:
    image: mysql:8
    container_name: pvDB
    environment:
      MYSQL_DATABASE: PACKETVISION
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./PacketVisionMySQLDump:/PacketVisionMySQLDump
    ports:
      - "${DB_PORT}:${DB_TROP}"
    restart: always

  web:
    build: ./PacketVisionWeb
    container_name: pvW
    ports:
      - "${W_PORT}:${W_TROP}"
    depends_on:
      - db
    restart: always

  websocket:
    build: ./PacketVisionWebSocket
    container_name: pvWS
    ports:
      - "${WS_PORT}:${WS_TROP}"
    depends_on:
      - db
    restart: always

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: pvPHPMA
    ports:
      - "${PHPMA_PORT}:${PHPMA_TROP}"
    environment:
      PMA_HOST: db
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
    depends_on:
      - db
    restart: always
  
  grafana:
    image: grafana/grafana
    container_name: pvG
    ports:
      - "${G_PORT}:${G_TROP}"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - db
    restart: always
    
volumes:
  mysql_data:
  grafana-storage: